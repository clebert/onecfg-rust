{
  "defines": {
    "tsconfig.base.json": {"format": "json"},
    "tsconfig.json": {"format": "json"}
  },
  "patches": {
    "tsconfig.base.json": [
      {
        "value": {
          "compilerOptions": {
            "allowUnreachableCode": false,
            "allowUnusedLabels": false,
            "noFallthroughCasesInSwitch": true,
            "noImplicitOverride": true,
            "noImplicitReturns": true,
            "noUncheckedIndexedAccess": true,
            "noUnusedLocals": true,
            "noUnusedParameters": true,
            "strict": true,
            "module": "node16",
            "moduleResolution": "node16",
            "importsNotUsedAsValues": "error",
            "esModuleInterop": true,
            "forceConsistentCasingInFileNames": true,
            "isolatedModules": true,
            "jsx": "react",
            "target": "es2022",
            "noErrorTruncation": true,
            "pretty": true
          }
        }
      }
    ],
    "tsconfig.json": [
      {
        "value": {
          "extends": "./tsconfig.base.json",
          "include": ["**/*"],
          "compilerOptions": {
            "resolveJsonModule": true,
            "noEmit": true,
            "checkJs": true
          }
        }
      }
    ],
    "jest.config.json": [
      {
        "value": {
          "extensionsToTreatAsEsm": [".ts", ".tsx"],
          "moduleNameMapper": {"^(\\.{1,2}/.*)\\.js$": "$1"},
          "transform": {"^.+\\.tsx?$": ["@swc/jest"]}
        }
      },
      {
        "value": {"testMatch": ["**/src/**/*.test.{ts,tsx}"]},
        "array_merge": "replace",
        "priority": 1
      }
    ],
    ".gitignore": [
      {
        "value": ["/tsconfig.base.json", "/tsconfig.json"]
      }
    ],
    ".prettierignore": [
      {
        "value": ["/tsconfig.base.json", "/tsconfig.json"]
      }
    ],
    ".swcrc": [
      {
        "value": {"jsc": {"parser": {"syntax": "typescript", "tsx": true}}}
      }
    ],
    ".vscode/settings.json": [
      {
        "value": {
          "editor.codeActionsOnSave": {"source.addMissingImports": true},
          "typescript.tsdk": "node_modules/typescript/lib"
        }
      }
    ]
  }
}
